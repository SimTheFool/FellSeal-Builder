version: "3"

vars:
  E: "{{.E}}"
  T: '{{default "testset" .T}}'

env:
  VITE_TARGET: "{{.T}}"

tasks:
  yarn:
    internal: true
    cmds:
      - yarn run --silent {{.CMD}}
    vars:
      CMD: "{{.CMD}}"

  vite:
    internal: true
    cmds:
      - task: yarn
        vars:
          CMD: vite -c ./cli/build/vite.config.js {{.CMD}}
    vars:
      CMD: "{{.CMD}}"

  #cli:
  #  internal: true
  #  cmds:
  #    - node {{.SCRIPT}}
  #  vars:
  #    SCRIPT: "{{.SCRIPT}}"

  #outDir:
  #  internal: true
  #  cmds:
  #    - outDir=$(node -e 'const conf = require("./tsconfig.{{.T}}.json"); console.log(conf.compilerOptions.outDir);') && {{.OPER}}
  #  vars:
  #    OPER: "{{.OPER }}"

  build:
    #internal: true
    cmds:
      - task: vite
        vars:
          CMD: build
      #- task: outDir
      #  vars:
      #    OPER: rm -rf "$outDir"
      #- task: yarn
      #  vars:
      #    BIN: tsc --noEmit --project tsconfig.{{.T}}.json
      #- task: cli
      #  vars:
      #    SCRIPT: ./cli/build -t tsconfig.{{.T}}.json

  test:
    cmds:
      - clear
      - task: build
      - task: cli
        vars:
          SCRIPT: ./cli/unitTest -p ./**/*{{default "*" .E}}*.spec.js
    sources:
      - src/**/*.ts
    generates:
      - ./build-test/**/*
    method: timestamp

  dist:
    cmds:
      - rm -rf ./dist
      - task: build
      - task: yarn
        vars:
          BIN: tsc ./src/entries/{{.E}}/index.ts --emitDeclarationOnly --declaration --skipLibCheck --outfile ./dist/index.d.ts
      - task: outDir
        vars:
          OPER: cp "$outDir/entries/{{.E}}/index.js" ./dist/index.js
